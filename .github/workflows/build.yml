name: Build and Publish

on:
  release:
    types: [created]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  build_linux_x86_64:
    name: Build Linux x86_64
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3

    - name: Build wheels
      uses: PyO3/maturin-action@v1
      env:
        LIBOPUS_STATIC: 1
        CFLAGS: "-fPIC"
        CXXFLAGS: "-fPIC"
      with:
        target: x86_64-unknown-linux-gnu
        args: --release --strip --features=pyo3/abi3-py38
        manylinux: 2014
        container: on
        before-script-linux: |
          set -e
          curl -L https://archive.mozilla.org/pub/opus/opus-1.3.1.tar.gz | tar xz
          cd opus-1.3.1
          ./configure --prefix=/usr --disable-shared --enable-static CFLAGS="-fPIC" CXXFLAGS="-fPIC"
          make -j$(nproc)
          make install
          cd ..
          rm -rf opus-1.3.1

    - name: Upload wheels
      uses: actions/upload-artifact@v3
      with:
        name: wheels-linux-x86_64
        path: target/wheels/*.whl

  build_linux_aarch64:
    name: Build Linux aarch64
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'

    - name: Set up Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: aarch64-unknown-linux-gnu

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
          ~/.cache/pip
        key: ubuntu-latest-aarch64-unknown-linux-gnu-${{ hashFiles('**/Cargo.lock', '**/pyproject.toml') }}

    - name: Install dependencies
      run: |
        sudo apt-get update && sudo apt-get install -y gcc-aarch64-linux-gnu
        python -m pip install --upgrade pip
        pip install maturin

    - name: Build wheels
      env:
        CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER: aarch64-linux-gnu-gcc
        CC_aarch64_unknown_linux_gnu: aarch64-linux-gnu-gcc
        CXX_aarch64_unknown_linux_gnu: aarch64-linux-gnu-g++
        CFLAGS: -march=armv8-a
        CXXFLAGS: -march=armv8-a
      run: maturin build --release --strip --target aarch64-unknown-linux-gnu --features=pyo3/abi3-py38

    - name: Upload wheels
      uses: actions/upload-artifact@v3
      with:
        name: wheels-linux-aarch64
        path: target/wheels/*.whl

  build_others:
    name: Build ${{ matrix.os }} ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: macos-latest
            target: aarch64-apple-darwin

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'

    - name: Build wheels
      env:
        MACOSX_DEPLOYMENT_TARGET: '10.9'
      uses: PyO3/maturin-action@v1
      with:
        target: ${{ matrix.target }}
        args: --release --strip --features=pyo3/abi3-py38
        rust-toolchain: stable

    - name: Upload wheels
      uses: actions/upload-artifact@v3
      with:
        name: wheels-${{ matrix.os }}-${{ matrix.target }}
        path: target/wheels/*.whl

  publish:
    name: Publish to PyPI
    needs: [build_linux_x86_64, build_linux_aarch64, build_others]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'created'
    
    steps:
      - uses: actions/checkout@v3

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: dist

      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --skip-existing dist/*/*.whl
